// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Network.API.Infrastructure.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Network.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220529173908_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Network.API.Entities.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DeviceStatus")
                        .HasColumnType("integer");

                    b.Property<int>("HardwareType")
                        .HasColumnType("integer");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsMosquitto")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("LastAlive")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MAC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MosquittoDeviceId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("MosquittoDeviceId");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Network.API.Entities.MosquittoDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateAdded")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DeviceType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("LastAlive")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("LastCheck")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MosquittoPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MosquittoUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MosquittoDevices");
                });

            modelBuilder.Entity("Network.API.Entities.Device", b =>
                {
                    b.HasOne("Network.API.Entities.MosquittoDevice", "MosquittoDevice")
                        .WithMany()
                        .HasForeignKey("MosquittoDeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MosquittoDevice");
                });
#pragma warning restore 612, 618
        }
    }
}
