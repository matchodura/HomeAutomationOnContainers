using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Threading.Tasks;

namespace SensorLogging.API.Utilities
{
    public static class PythonRunner
    {

        public static string[] RunScript(string pythonVersion, string scriptPath, string dataLocation, string[] args)
        {
            Console.WriteLine("Running python script!");
            ProcessStartInfo start = new ProcessStartInfo();
            start.FileName = pythonVersion;
            start.ArgumentList.Add(scriptPath + "LYWSD03MMC.py");
            start.ArgumentList.Add(args[0]);
            start.ArgumentList.Add(args[1]);
            start.ArgumentList.Add(args[2]);
            start.ArgumentList.Add(args[3]);
            start.ArgumentList.Add(args[4]);
            start.ArgumentList.Add(args[5]);
            start.ArgumentList.Add(args[6]);
            start.ArgumentList.Add(args[7]);
            start.ArgumentList.Add(args[8]);
            start.ArgumentList.Add(args[9]);
            start.UseShellExecute = false;// Do not use OS shell
            start.CreateNoWindow = false; // We don't need new window
            start.RedirectStandardOutput = true;// Any output, generated by application will be redirected back
            start.RedirectStandardError = true; // Any error in standard output will be redirected back (for example exceptions)
            Console.WriteLine($"Argument List: {String.Join(" ", start.ArgumentList)}");

            Process process = new Process();

            Console.WriteLine("Starting python process");
            process = Process.Start(start);
            //using (Process process = Process.Start(start))
            //{
            //    using (StreamReader reader = process.StandardOutput)
            //    {
            //        string stderr = process.StandardError.ReadToEnd(); // Here are the exceptions from our Python script
            //        Console.WriteLine($"Error: {stderr}");

            //        string result = reader.ReadToEnd(); // Here is the result of StdOut(for example: print "test")
            //        Console.WriteLine($"Result: {stderr}");

            //    }


            //}

            process.WaitForExit(1000*60*5);
            Console.WriteLine("Ended python process");
            process.Close();

           
            return ReadFileContents(dataLocation + "data.txt");
        }


        private static string[] ReadFileContents(string filePath)
        {
            return System.IO.File.ReadAllLines(filePath);
        }

    }
}
